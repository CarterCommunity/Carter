name: .NET Core

on:
  pull_request:
    branches:
    # This will need to be changed to main
    - defaultinterface
  push:
    tags:
    - '*'

jobs:
  build:

    name: Github Actions Build
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v1
    - name: Setup .NET Core
      uses: actions/setup-dotnet@v2
      with:
        dotnet-version: 7.*
        include-prerelease: true
    - name: Restore .NET tools
      run: dotnet tool restore
    - name: Compute version with MinVer
      run: |
        CARTER_VERSION=$(dotnet minver --verbosity error)
        echo "Computed version by MinVer: $CARTER_VERSION"
        echo "MINVERVERSIONOVERRIDE=$CARTER_VERSION" >> $GITHUB_ENV
    - name: Build Reason
      run: echo ${{github.ref}} and ${{github.event_name}}
    - name: Build with dotnet
      run: >-
        dotnet build
        --configuration Release
        --nologo
    - name: Run tests
      run: >-
        dotnet test
        --configuration Release
        --logger trx
        --no-build
        --nologo
    - name: Publish test results
      uses: dorny/test-reporter@v1
      if: always()
      with:
          name: .NET tests
          path: '**/*.trx'
          reporter: dotnet-trx

    # PR opened, push prelease Carter and template package to feedz
    - if: github.event_name == 'pull_request'
      name: Replace project reference with NuGet package reference in template project
      run: >-
        ./replace-project-reference-with-package-reference.ps1
        -ProjectFile ./template/content/CarterTemplate.csproj
        -PackageVersion $env:MINVERVERSIONOVERRIDE
      shell: pwsh

    - if: github.event_name == 'pull_request'
      name: Create Carter template NuGet package
      run: >-
        dotnet pack ./template/Template.csproj
        --configuration Release
        --nologo

    - if: github.event_name == 'pull_request'
      name: Push prerelease Carter package to Feedz
      run: ./push.sh carter feedz ${{ secrets.FEEDZ_KEY }}

    # Main tag created, push release Carter package to NuGet
    - if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags') && !startsWith(github.ref, 'refs/tags/newtonsoft-')
      name: Push release Carter package to NuGet
      run: ./push.sh carter nuget ${{ secrets.NUGET_KEY }}

    # Newtonsoft tag created, push release Newtonsoft package to NuGet
    - if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags') && startsWith(github.ref, 'refs/tags/newtonsoft-')
      name: Push release Newtonsoft package to NuGet
      run: ./push.sh newtonsoft nuget ${{ secrets.NUGET_KEY }}

env:
  DOTNET_CLI_TELEMETRY_OPTOUT: 1
